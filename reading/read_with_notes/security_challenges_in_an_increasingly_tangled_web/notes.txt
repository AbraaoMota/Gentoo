SYNOPSIS:

PAPER DESCRIBES THE MAIN SECURITY ISSUES WITH ALLOWING SCRIPTS FROM 3RD PARTIES, INCLUDING ADVERTISERS. THIS BLOCKS HTTPS UPGRADES FOR A LARGE NUMBER OF SITES


Notes from paper (email exchange to Sergio)

It seems that one of the major blockers to making everything HTTPS are Ad companies, and specifically real-time ad bidding - which means the source of a provided advert is only decided really late in the process. Perhaps there's a gap somewhere for HTTPS-only Ad provider in the market... The (cyclic) loops generated by the blockers are also interesting, as some sites mutually block each other from upgrading to HTTPS. It might be interesting to analyse these relationships - I would predict that some of the biggest offenders in blocking upgrades are also more likely to be more trustworthy than a site which blocks upgrading for fewer sites.

A question I've had as a result (but seemed to be a hard find in google) was to ask what an AS is (they're often referred to in the paper). It seems to be that they are Active networks; by the examples provided these seemed to be similar to CDN's, but I wasn't sure that this was the case in the end. Perhaps you might know a bit more about this?

Some of the things I planned to do as a result is to have a look at the headless browser the researchers published (it seems to be based off of Chromium), as well as having a look at Polaris (which seems to make dependency graphs with information like this).


Sergio:

i also had to look it up to be honest. AS stays for Autonomous System, a
misnomer for a range of IP addresses more or less: so in that sense all
the public IPs "owned" by Imperial denote the Imperial AS. similarly
google's AS controls a whole range of IPs, and so on.

> Some of the things I planned to do as a result is to have a look at the
> headless browser the researchers published (it seems to be based off of
> Chromium), as well as having a look at Polaris (which seems to make
> dependency graphs with information like this).

related to what i said above, the headless browser is more useful for
large-scale studies, instead we have the opportunity of using a real
browser (chrome?) that avoids issues of inconsistency etc. and makes it
possible to also capture realistic visual snapshots or interact
manually, if needed.


Me:

> why do you think they would be more trustworthy?

Just simply because of the sheer number of other websites that are relying on their output. It's hard to believe that so many websites would put trust in such a few domains if these weren't trustworthy. I feel like web developers are sensitive to changes in security for any these 'highly-dependent' script providers, so if anything were to happen that compromised their security they would be quick to migrate. These providers are also (they seem to be) very large companies whose reputation is very strongly tied to these scripts so if anything were to go wrong I'm certain they would put a large amount of resources into fixing it. 
