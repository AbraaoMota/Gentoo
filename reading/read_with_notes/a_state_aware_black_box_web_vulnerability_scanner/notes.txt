SYNOPSIS:

THESE GUYS GENERATE A FINITE STATE MACHINE TO REPRESENT THE WEB APPLICATION IN A BLACK BOX WAY
THIS PAPER IS A GREAT SOURCE OF FURTHER READING - CHECK RESULTS AND EVALUATION


Notes on the paper:

Goal of the paper is to use an analysis of the website from the outside to explore all the possible states it can generate
Then exploit the application based on the fsm generated

These guys use a _symbolic Mealy machine_ to keep track of the state in the web application (makes use of an infinite alphabet to represent states
whose output influences the input of a next state.


Inferring the state machine consists of one key insight:
  - The algorithm is based on state change
  - We infer a state change when we submit an identical request to a part of the page and receive a different response from that request


  In order to make this state machine more efficient and usable
    - Similar pages are clustered (pages that are almost the same such as calendars)
    - Determine which request causes the change in state
    - Collapsing similar states into one
    - Navigation strategies: Pick a link in the last response, and try and explore links which will change state the least to explore the most without
      having permanent changes affect it


IMPORTANT QUOTE:
  PAGE 8 (Evaluation)
    "As shown in previous research [16], fairly evaluating black-box web vulnerability scanners is difficult."
    DOUPE ́, A., COVA, M., AND VIGNA, G. Why Johnny Can’t Pentest: An Analysis of Black-box Web Vulnerability Scanners. In Detection of Intrusions and Malware, and Vulnerability As- sessment (DIMVA 2010) (2010), Springer, pp. 111–131.



Evaluation metrics:
  True vulnerabilities discovered is the most important metric
  Number of False positives
  Code Coverage - this can be misleading because important code may make up only a small percentage of the whole application


Tools:
  wget is a crawler that makes the most GET requests that it can find
  w3af open source black box web vuln scanner
  skipfish open source black box web scanner
  Huang developed a tool called WAVES
  Extensive list of applications and other tools in the related work


Some results of comparing scanners shows that some scanners miss the fact there is a vulnerability due to their own fuzzing and randomizing -
the application produces so much random stuff that it's clear that the scanner doesn't understand why the state is changing

This scanner is limited to applications that don't use multiple users - because they may influence changes in the application without the scanner
being able to keep track of this.










































